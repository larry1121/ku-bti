{"ast":null,"code":"import _regeneratorRuntime from\"/Users/usere/Documents/GitHub/ku-bti/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/usere/Documents/GitHub/ku-bti/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _classCallCheck from\"/Users/usere/Documents/GitHub/ku-bti/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/usere/Documents/GitHub/ku-bti/node_modules/@babel/runtime/helpers/esm/createClass.js\";var QdataService=/*#__PURE__*/function(){function QdataService(http){_classCallCheck(this,QdataService);this.http=http;}_createClass(QdataService,[{key:\"incrementByIdAndType\",value:function(){var _incrementByIdAndType=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(id,type){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",this.http.fetch(\"/Qdata/\".concat(id,\"/\").concat(type),{method:'PUT'}));case 1:case\"end\":return _context.stop();}}},_callee,this);}));function incrementByIdAndType(_x,_x2){return _incrementByIdAndType.apply(this,arguments);}return incrementByIdAndType;}()},{key:\"incrementMBTI\",value:function(){var _incrementMBTI=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(mbti){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",this.http.fetch(\"/Qdata/MBTI/hello/\".concat(mbti),{method:'PUT'}));case 1:case\"end\":return _context2.stop();}}},_callee2,this);}));function incrementMBTI(_x3){return _incrementMBTI.apply(this,arguments);}return incrementMBTI;}()},{key:\"getQdataById\",value:function(){var _getQdataById=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(id){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",this.http.fetch(\"/Qdata/\".concat(id),{method:'GET'}));case 1:case\"end\":return _context3.stop();}}},_callee3,this);}));function getQdataById(_x4){return _getQdataById.apply(this,arguments);}return getQdataById;}()},{key:\"getMBTI\",value:function(){var _getMBTI=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",this.http.fetch(\"/Qdata/getmbti/all\",{method:'GET'}));case 1:case\"end\":return _context4.stop();}}},_callee4,this);}));function getMBTI(){return _getMBTI.apply(this,arguments);}return getMBTI;}()}]);return QdataService;}();//   async signup(username, password, name, email, url) {\n//     const data = await this.http.fetch('/auth/signup', {\n//       method: 'POST',\n//       body: JSON.stringify({\n//         username,\n//         password,\n//         name,\n//         email,\n//         url,\n//       }),\n//     });\n//     this.tokenStorage.saveToken(data.token);\n//     return data;\n//   }\n//   async login(username, password) {\n//     const data = await this.http.fetch('/auth/login', {\n//       method: 'POST',\n//       body: JSON.stringify({ username, password }),\n//     });\n//     this.tokenStorage.saveToken(data.token);\n//     return data;\n//   }\n//   async me() {\n//     const token = this.tokenStorage.getToken();\n//     return this.http.fetch('/auth/me', {\n//       method: 'GET',\n//       headers: { Authorization: `Bearer ${token}` },\n//     });\n//   }\n//   async logout() {\n//     this.tokenStorage.clearToken();\n//   }\n// }\nexport{QdataService as default};","map":{"version":3,"names":["QdataService","http","id","type","fetch","method","mbti"],"sources":["/Users/usere/Documents/GitHub/ku-bti/src/service/Qdata.js"],"sourcesContent":["export default class QdataService {\n  constructor(http) {\n    this.http = http;\n    \n  }\n  \n  async incrementByIdAndType(id, type) {\n    return this.http.fetch(`/Qdata/${id}/${type}`, {\n      method: 'PUT',\n    });\n  }\n  async incrementMBTI(mbti) {\n    return this.http.fetch(`/Qdata/MBTI/hello/${mbti}`, {\n      method: 'PUT',\n    });\n  }\n  async getQdataById(id) {\n    return this.http.fetch(`/Qdata/${id}`, {\n      method: 'GET',\n    });\n  }\n  async getMBTI() {\n    return this.http.fetch(`/Qdata/getmbti/all`, {\n      method: 'GET',\n    });\n  }\n}\n\n\n\n\n//   async signup(username, password, name, email, url) {\n//     const data = await this.http.fetch('/auth/signup', {\n//       method: 'POST',\n//       body: JSON.stringify({\n//         username,\n//         password,\n//         name,\n//         email,\n//         url,\n//       }),\n//     });\n//     this.tokenStorage.saveToken(data.token);\n//     return data;\n//   }\n\n//   async login(username, password) {\n//     const data = await this.http.fetch('/auth/login', {\n//       method: 'POST',\n//       body: JSON.stringify({ username, password }),\n//     });\n//     this.tokenStorage.saveToken(data.token);\n//     return data;\n//   }\n\n//   async me() {\n//     const token = this.tokenStorage.getToken();\n//     return this.http.fetch('/auth/me', {\n//       method: 'GET',\n//       headers: { Authorization: `Bearer ${token}` },\n//     });\n//   }\n\n//   async logout() {\n//     this.tokenStorage.clearToken();\n//   }\n// }\n"],"mappings":"yfAAqBA,a,yBACnB,sBAAYC,IAAZ,CAAkB,oCAChB,KAAKA,IAAL,CAAYA,IAAZ,CAED,C,4JAED,iBAA2BC,EAA3B,CAA+BC,IAA/B,oJACS,KAAKF,IAAL,CAAUG,KAAV,kBAA0BF,EAA1B,aAAgCC,IAAhC,EAAwC,CAC7CE,MAAM,CAAE,KADqC,CAAxC,CADT,6D,iPAKA,kBAAoBC,IAApB,yJACS,KAAKL,IAAL,CAAUG,KAAV,6BAAqCE,IAArC,EAA6C,CAClDD,MAAM,CAAE,KAD0C,CAA7C,CADT,+D,uNAKA,kBAAmBH,EAAnB,yJACS,KAAKD,IAAL,CAAUG,KAAV,kBAA0BF,EAA1B,EAAgC,CACrCG,MAAM,CAAE,KAD6B,CAAhC,CADT,+D,0MAKA,2KACS,KAAKJ,IAAL,CAAUG,KAAV,sBAAsC,CAC3CC,MAAM,CAAE,KADmC,CAAtC,CADT,+D,2GAUF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;OAlEqBL,Y"},"metadata":{},"sourceType":"module"}